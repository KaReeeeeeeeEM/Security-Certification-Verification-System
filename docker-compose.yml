# Docker Compose configuration for full-stack deployment
# Includes MongoDB, Redis, and the application with proper networking

version: '3.8'

services:
  # MongoDB database service
  mongodb:
    image: mongo:7.0
    container_name: certificate_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: securepassword123
      MONGO_INITDB_DATABASE: certificate_verification
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - certificate_network
    command: mongod --auth

  # Redis for session storage and caching
  redis:
    image: redis:7.2-alpine
    container_name: certificate_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - certificate_network
    command: redis-server --appendonly yes --requirepass redispassword123

  # Main application service
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: certificate_app
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:securepassword123@mongodb:27017/certificate_verification?authSource=admin
      JWT_SECRET: ${JWT_SECRET}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      REDIS_URL: redis://:redispassword123@redis:6379
      FRONTEND_URL: ${FRONTEND_URL}
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
    depends_on:
      - mongodb
      - redis
    networks:
      - certificate_network
    volumes:
      - app_logs:/app/logs
      - app_uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx reverse proxy (optional, for production)
  nginx:
    image: nginx:alpine
    container_name: certificate_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - certificate_network

# Named volumes for data persistence
volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  app_logs:
    driver: local
  app_uploads:
    driver: local
  nginx_logs:
    driver: local

# Custom network for service communication
networks:
  certificate_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
